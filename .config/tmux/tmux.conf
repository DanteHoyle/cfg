
# Description: Main configuration file for tmux multiplexor

# GENERAL CONFIG

# changes prefix to Ctrl + Space
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# enables mouse input
setw -g mouse on

# increase scrollback history
set -g history-limit 5000

# reduces input delay
set -sg escape-time 10
set -g repeat-time 0
set -g focus-events on

set -g base-index 1
setw -g pane-base-index 1

# TERMINAL COLOR FIXES

# fixes colors with Neovim
set -g default-terminal 'tmux-256color'
set -sg terminal-overrides 'xterm-256color:RGB'
# set-option -a terminal-features 'foot:RGB'

# enables undercurls in tmux
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
# underscore colours - needs tmux-3.0
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m' 
# underscore colours - needs tmux-3.0 (wsl2 in Windows Terminal)}
if-shell -b '[ -e "$WSL_DISTRO_NAME" ]' "set -as terminal-overrides ',*:Setulc=\E[58::2::::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'"

# DESIGN TWEAKS

set -g status-interval 1
set -g status-left-style fg=black
set -g window-status-current-style fg=black,bold
set -g window-status-style fg=black,dim

# SHORTCUTS

# Changes some keybinds to be like vim
setw -g mode-keys vi

bind -T copy-mode-vi v send -X begin-selection

# Makes vertical and horizontal split keybinds match vim
unbind v
unbind s
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

# Rebind for S since I reused s for splitting panes from vim
bind-key S choose-session

# Create a new window with the same working directory
bind-key C new-window -c "#{pane_current_path}"

# By explicitly setting this, it doesn't ask for confirmation to kill a window pane
bind-key x kill-pane
bind-key & kill-window

# Allows switching window panges with vim keys
bind-key -r h select-pane -L
bind-key -r j select-pane -D
bind-key -r k select-pane -U
bind-key -r l select-pane -R

# Makes prefix + C-l clear the screen
bind-key C-l send-keys 'C-l'
bind-key C-k send-keys 'C-k'

bind-key r split-window -h -c "#{pane_current_path}" "ipython||ipython3" \; select-pane -R

# Smart pane switching with awareness of neovim splits. https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
